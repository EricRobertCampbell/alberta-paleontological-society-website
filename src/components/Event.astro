---
import { generateEventDateTimeString } from "../utility";
import type { EventFrontmatter } from "../content/config";
interface Props {
	frontmatter: EventFrontmatter;
	last: boolean;
}
const { frontmatter, last } = Astro.props;
const { title, startDate, startTime, endDate, endTime, type, image } =
	frontmatter;
const eventDateTimeString = generateEventDateTimeString(
	startDate,
	startTime,
	endDate,
	endTime
);

const containerClassList = ["container"];
if (image) {
	containerClassList.push("image-present");
}
---

<section
	class:list={last ? [] : ["not-last"]}
	data-startdate={startDate}
	data-enddate={endDate ? endDate : startDate}
	data-type="event"
>
	<p class="event-type">
		{type}
	</p>
	<h3 class="event-title">{title}</h3>
	<p class="event-time">
		{eventDateTimeString}
	</p>
	<div class:list={containerClassList}>
		{
			image && (
				<div class="image-container">
					<figure>
						<img
							class="event-hero-image"
							src={image.src}
							alt={image.alt}
						/>
					</figure>
					{image.attribution && (
						<figcaption>{image.attribution}</figcaption>
					)}
				</div>
			)
		}
		<div class="content-container">
			<slot />
		</div>
	</div>
</section>

<style>
	.container.image-present {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
	}
	.image-container {
		max-width: 40%;
		height: auto;
		margin-right: calc(4 * var(--theme-spacing-base));
	}
	.event-hero-image {
		height: auto;
		width: 100%;
	}
	section.not-last {
		margin: 3px 0px;
		margin-bottom: 8px;
		border-bottom: solid 1px black;
	}
	p.event-type {
		color: var(--accent-colour-dark);
		margin-bottom: 0px;
		font-size: 0.75rem;
	}
	.event-title {
		margin-top: var(--theme-spacing-base);
		margin-bottom: calc(var(--theme-spacing-base));
	}
	.event-time {
		color: var(--accent-colour-medium);
		font-size: 1rem;
		margin: var(--theme-spacing-base) 0;
	}
	figure {
		margin: 0;
	}
	figcaption {
		font-size: 0.5rem;
	}

	/* Desktop settings */
	@media screen and (min-width: 768px) {
		.container.image-present {
			flex-direction: row;
		}
	}
</style>
