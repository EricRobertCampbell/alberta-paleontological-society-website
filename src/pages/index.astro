---
import Layout from '../layouts/Layout.astro'
import Card from '../components/Card.astro'
import Event from '../components/Event.astro'
import Announcement from '../components/Announcement.astro'
import SocialsLinks from '../components/SocialsLinks.astro'
import TodaysEvents from '../components/TodaysEvents.astro'
import { splitIsoString } from '../utility/dates'

import { getCollection } from 'astro:content'

import {
	getTodayString,
	formatDate,
} from '../utility'

// get the next event
const todayString = getTodayString();
const now = new Date();

const allEvents = await getCollection('events')
const renderedEvents = (
	await Promise.all(
		allEvents.map(async (event) => {
			const rendered = await event.render()
			return { ...rendered, slug: event.slug }
		})
	)
)
	.filter((e) => {
		if (e.remarkPluginFrontmatter.host && e.remarkPluginFrontmatter.host !== 'APS') {
			return false
			
		}
		if (e.remarkPluginFrontmatter.start) {
			return new Date(e.remarkPluginFrontmatter.start) >= now
		}	
		return e.remarkPluginFrontmatter.startDate >= todayString
	})
	.sort((e1, e2) => {
	let dates: Array<string> = [e1, e2].map(e => {
		if (e.remarkPluginFrontmatter.start) {
			return splitIsoString(e.remarkPluginFrontmatter.start).date;
		} else if (e.remarkPluginFrontmatter.startDate) {
			return e.remarkPluginFrontmatter.startDate
		} 
		return ""
	})
	const [firstDate, secondDate] = dates
	return secondDate.localeCompare(firstDate)
	})

let nextEvent
if (renderedEvents.length > 0) {
	nextEvent = renderedEvents[renderedEvents.length - 1]
}

let dates = []
const allAnnouncements = (await getCollection('announcements'))
	.filter(({ data }) => {
		// NB This is horrifying. There definitely needs to be a better way of doing this
		// TODO sort out this nonsense
		let [year, month, day] = getTodayString().split('-')
		day = Number(day) + 2
		let today
		do {
			today = new Date([year, month, day].join('-'))
			day--
		} while (!(day > 1 && today instanceof Date && isFinite(today)))
		const startDate = new Date(data.startDate)
		const endDate = new Date(data.endDate)
		dates.push({
			getTodayString: getTodayString(),
			today,
			startDate,
			endDate,
			display: today >= startDate && today <= endDate,
		})
		return today >= startDate && today <= endDate
	})
	.sort((a1, a2) => {
		return (
			new Date(a2.data.startDate).getTime() -
			new Date(a1.data.startDate).getTime()
		)
	})
const renderedAnnouncements = await Promise.all(
	allAnnouncements.map(async (announcement) => {
		return await announcement.render()
	})
)
---

<Layout title="Alberta Palaeontological Society">
	<section>
		<img
			src={'/assets/warner_1_low.jpg'}
			id="initial-image"
			alt="APS members listening to a description of the Devil's Coulee fossil locality"
		/>
		<p>
			The Alberta Palaeontological Society (APS) is a non-profit
			organization founded in 1986. Our main goal is to promote the
			science of palaeontology through study and education. The APS makes
			important contributions to the field by discovering new findings and
			responsibly collecting, curating, and displaying significant fossil
			specimens. We are passionate about educating the general public,
			sharing knowledge about palaeontological discoveries, and fostering
			an appreciation for the ancient past.
		</p>

		<p>
			Moreover, the society is committed to preserving palaeontological
			materials for the benefit of future generations. To achieve our
			mission, the APS actively collaborates with professional and
			academic communities, working together to safeguard and enhance the
			understanding of Alberta's rich cultural heritage.
		</p>

		<p>
			The Alberta Palaeontological Society is a non-profit volunteer organization dedicated to spreading the
			wonders of palaeontology, ensuring that people of all ages can
			explore and appreciate the fascinating world of prehistoric life.
		</p>
		<!-- <TodaysEvents /> -->
		{
			renderedAnnouncements.length > 0 ? (
				<section>
					<h2>Announcements</h2>
					{renderedAnnouncements.map(
						(announcement, index, allAnnouncements) => {
							const { Content, headings } = announcement
							return (
								<Announcement
									frontmatter={
										announcement.remarkPluginFrontmatter
									}
									last={index === allAnnouncements.length - 1}
								>
									<Content />
								</Announcement>
							)
						}
					)}
				</section>
			) : null
		}
	</section>
	{
		nextEvent && (
			<section>
				<h2>Next Event</h2>
				<Event
					frontmatter={nextEvent.remarkPluginFrontmatter}
					last={true}
					showPermalink={true}
					slug={nextEvent.slug}
				>
					<nextEvent.Content />
				</Event>
				<p>
					For more information, see our{' '}
					<a href="/events/">events page</a>.
				</p>
			</section>
		)
	}
	<section>
		<h3>Become a Member!</h3>
		<p>
			Become a member of the Alberta Palaeontological Society and unlock a
			world of palaeontological discovery. Engage with fellow enthusiasts,
			support fossil education, and gain exclusive access to field trips
			and resources that enrich your understanding of prehistoric life. <a
				href="/members/"
			>
				Join us today</a
			> and embark on a journey through time together.
		</p>
	</section>
	<section>
		<h3>We're on social media!</h3>
		<p>
			Connect with us to get the latest news, pictures, and recordings of
			our presentations.
		</p>
		<SocialsLinks size={2} />
	</section>
	<section>
		<div
			style={{
				display: 'flex',
				flexDirection: 'column',
			}}
		>
			<h4 style={{ textAlign: 'center' }}>APS Books for Sale</h4>
			<div id="book-pictures">
				<a class="reset-link-style" href="store#commonvertebratefossils">
					<img
						alt="Guide to Common Vertebrate Fossils from the Cretaceous of Albera"
						src="/guidetofossilssmall.jpg"
						style={{ marginRight: '8px' }}
					/>
				</a>
			</div>

			<p>
				Refer to the <a href="store">Store</a> link on this website for cost,
				how to purchase a copy and other details. These books will also be
				available for purchase at our monthly meetings.
			</p>
		</div>{' '}
	</section>
	<section>
		<h2>Privacy Policy</h2>
		<p>
			Please see our <a href="privacypolicy">Privacy Policy</a> for our policies
			regarding privacy, copyright, and liability.
		</p>
	</section>
</Layout>

<style>
	section {
		padding-bottom: 8px;
	}

	section:not(:last-of-type) {
		margin: 3px 0px;
		margin-bottom: 8px;
		border-bottom: solid 1px black;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
	img.social-img {
		height: 3rem;
		padding: 4px;
	}

	#book-pictures {
		display: flex;
		flex-direction: column;
		align-content: center;
		justify-content: center;
	}

	#book-pictures a {
		text-align: center;
		padding: var(--theme-spacing-base);
	}

	/* Making it responsive  - these styles should be applied for the desktop version*/
	@media screen and (min-width: 768px) {
		#book-pictures {
			flex-direction: row;
			justify-content: center;
		}
	}

	#initial-image {
		float: left;
		margin: calc(4 * var(--theme-spacing-base));
		width: 40%;
	}
</style>
